# Generated by Django 5.1.4 on 2025-03-07 11:38

import core.managers
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('role', models.CharField(choices=[('cis', 'Chief Inspector of Schools'), ('siso', 'School Improvement Support Officer'), ('headteacher', 'Headteacher'), ('teacher', 'Teacher')], help_text='Designates the role assigned to the user.', max_length=20, verbose_name='User Role')),
                ('staff_id', models.IntegerField(db_index=True, unique=True)),
                ('license_number', models.CharField(max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('first_appointment_date', models.DateField(blank=True, null=True)),
                ('assigned_classes', models.CharField(blank=True, max_length=255, null=True)),
                ('password_changed', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', core.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Circuit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('siso', models.OneToOneField(blank=True, limit_choices_to={'role': 'siso'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_circuit', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='circuit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='core.circuit'),
        ),
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.department')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('cis', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_district', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='circuit',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='circuits', to='core.district'),
        ),
        migrations.AddField(
            model_name='user',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='core.district'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_reminders', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_reminders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('school_code', models.IntegerField(unique=True)),
                ('circuit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='core.circuit')),
                ('department', models.ManyToManyField(blank=True, related_name='schools', to='core.department')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schools_in_districts', to='core.district')),
                ('headteacher', models.OneToOneField(blank=True, limit_choices_to={'role': 'headteacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school_headteacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=20)),
                ('academic_year', models.CharField(choices=[('2000/2001', '2000/2001'), ('2001/2002', '2001/2002'), ('2002/2003', '2002/2003'), ('2003/2004', '2003/2004'), ('2004/2005', '2004/2005'), ('2005/2006', '2005/2006'), ('2006/2007', '2006/2007'), ('2007/2008', '2007/2008'), ('2008/2009', '2008/2009'), ('2009/2010', '2009/2010'), ('2010/2011', '2010/2011'), ('2011/2012', '2011/2012'), ('2012/2013', '2012/2013'), ('2013/2014', '2013/2014'), ('2014/2015', '2014/2015'), ('2015/2016', '2015/2016'), ('2016/2017', '2016/2017'), ('2017/2018', '2017/2018'), ('2018/2019', '2018/2019'), ('2019/2020', '2019/2020'), ('2020/2021', '2020/2021'), ('2021/2022', '2021/2022'), ('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035'), ('2035/2036', '2035/2036'), ('2036/2037', '2036/2037'), ('2037/2038', '2037/2038'), ('2038/2039', '2038/2039'), ('2039/2040', '2039/2040'), ('2040/2041', '2040/2041'), ('2041/2042', '2041/2042'), ('2042/2043', '2042/2043'), ('2043/2044', '2043/2044'), ('2044/2045', '2044/2045'), ('2045/2046', '2045/2046'), ('2046/2047', '2046/2047'), ('2047/2048', '2047/2048'), ('2048/2049', '2048/2049'), ('2049/2050', '2049/2050'), ('2050/2051', '2050/2051'), ('2051/2052', '2051/2052'), ('2052/2053', '2052/2053'), ('2053/2054', '2053/2054'), ('2054/2055', '2054/2055'), ('2055/2056', '2055/2056'), ('2056/2057', '2056/2057'), ('2057/2058', '2057/2058'), ('2058/2059', '2058/2059'), ('2059/2060', '2059/2060'), ('2060/2061', '2060/2061'), ('2061/2062', '2061/2062'), ('2062/2063', '2062/2063'), ('2063/2064', '2063/2064'), ('2064/2065', '2064/2065'), ('2065/2066', '2065/2066'), ('2066/2067', '2066/2067'), ('2067/2068', '2067/2068'), ('2068/2069', '2068/2069'), ('2069/2070', '2069/2070'), ('2070/2071', '2070/2071'), ('2071/2072', '2071/2072'), ('2072/2073', '2072/2073'), ('2073/2074', '2073/2074'), ('2074/2075', '2074/2075'), ('2075/2076', '2075/2076'), ('2076/2077', '2076/2077'), ('2077/2078', '2077/2078'), ('2078/2079', '2078/2079'), ('2079/2080', '2079/2080'), ('2080/2081', '2080/2081'), ('2081/2082', '2081/2082'), ('2082/2083', '2082/2083'), ('2083/2084', '2083/2084'), ('2084/2085', '2084/2085'), ('2085/2086', '2085/2086'), ('2086/2087', '2086/2087'), ('2087/2088', '2087/2088'), ('2088/2089', '2088/2089'), ('2089/2090', '2089/2090'), ('2090/2091', '2090/2091'), ('2091/2092', '2091/2092'), ('2092/2093', '2092/2093'), ('2093/2094', '2093/2094'), ('2094/2095', '2094/2095'), ('2095/2096', '2095/2096'), ('2096/2097', '2096/2097'), ('2097/2098', '2097/2098'), ('2098/2099', '2098/2099'), ('2099/2100', '2099/2100')], default='2025/2026', max_length=9)),
                ('average_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('circuit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_summaries', to='core.circuit')),
                ('class_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_summaries', to='core.classgroup')),
                ('department', models.ManyToManyField(blank=True, related_name='performance_summaries', to='core.department')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_summaries', to='core.district')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_summaries', to='core.school')),
            ],
        ),
        migrations.AddField(
            model_name='classgroup',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.school'),
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='core.school'),
        ),
        migrations.CreateModel(
            name='SchoolSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('pending', 'Pending Approval'), ('not_submitted', 'Not Submitted')], default='not_submitted', max_length=20)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('circuit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='core.circuit')),
                ('class_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='core.classgroup')),
                ('department', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='core.department')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='core.district')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('class_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='core.classgroup')),
                ('department', models.ManyToManyField(blank=True, related_name='subjects', to='core.department')),
                ('teacher', models.ForeignKey(blank=True, limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(blank=True, max_length=20, null=True)),
                ('academic_year', models.CharField(choices=[('2000/2001', '2000/2001'), ('2001/2002', '2001/2002'), ('2002/2003', '2002/2003'), ('2003/2004', '2003/2004'), ('2004/2005', '2004/2005'), ('2005/2006', '2005/2006'), ('2006/2007', '2006/2007'), ('2007/2008', '2007/2008'), ('2008/2009', '2008/2009'), ('2009/2010', '2009/2010'), ('2010/2011', '2010/2011'), ('2011/2012', '2011/2012'), ('2012/2013', '2012/2013'), ('2013/2014', '2013/2014'), ('2014/2015', '2014/2015'), ('2015/2016', '2015/2016'), ('2016/2017', '2016/2017'), ('2017/2018', '2017/2018'), ('2018/2019', '2018/2019'), ('2019/2020', '2019/2020'), ('2020/2021', '2020/2021'), ('2021/2022', '2021/2022'), ('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035'), ('2035/2036', '2035/2036'), ('2036/2037', '2036/2037'), ('2037/2038', '2037/2038'), ('2038/2039', '2038/2039'), ('2039/2040', '2039/2040'), ('2040/2041', '2040/2041'), ('2041/2042', '2041/2042'), ('2042/2043', '2042/2043'), ('2043/2044', '2043/2044'), ('2044/2045', '2044/2045'), ('2045/2046', '2045/2046'), ('2046/2047', '2046/2047'), ('2047/2048', '2047/2048'), ('2048/2049', '2048/2049'), ('2049/2050', '2049/2050'), ('2050/2051', '2050/2051'), ('2051/2052', '2051/2052'), ('2052/2053', '2052/2053'), ('2053/2054', '2053/2054'), ('2054/2055', '2054/2055'), ('2055/2056', '2055/2056'), ('2056/2057', '2056/2057'), ('2057/2058', '2057/2058'), ('2058/2059', '2058/2059'), ('2059/2060', '2059/2060'), ('2060/2061', '2060/2061'), ('2061/2062', '2061/2062'), ('2062/2063', '2062/2063'), ('2063/2064', '2063/2064'), ('2064/2065', '2064/2065'), ('2065/2066', '2065/2066'), ('2066/2067', '2066/2067'), ('2067/2068', '2067/2068'), ('2068/2069', '2068/2069'), ('2069/2070', '2069/2070'), ('2070/2071', '2070/2071'), ('2071/2072', '2071/2072'), ('2072/2073', '2072/2073'), ('2073/2074', '2073/2074'), ('2074/2075', '2074/2075'), ('2075/2076', '2075/2076'), ('2076/2077', '2076/2077'), ('2077/2078', '2077/2078'), ('2078/2079', '2078/2079'), ('2079/2080', '2079/2080'), ('2080/2081', '2080/2081'), ('2081/2082', '2081/2082'), ('2082/2083', '2082/2083'), ('2083/2084', '2083/2084'), ('2084/2085', '2084/2085'), ('2085/2086', '2085/2086'), ('2086/2087', '2086/2087'), ('2087/2088', '2087/2088'), ('2088/2089', '2088/2089'), ('2089/2090', '2089/2090'), ('2090/2091', '2090/2091'), ('2091/2092', '2091/2092'), ('2092/2093', '2092/2093'), ('2093/2094', '2093/2094'), ('2094/2095', '2094/2095'), ('2095/2096', '2095/2096'), ('2096/2097', '2096/2097'), ('2097/2098', '2097/2098'), ('2098/2099', '2098/2099'), ('2099/2100', '2099/2100')], default='2025/2026', max_length=9)),
                ('mark', models.DecimalField(decimal_places=2, max_digits=5)),
                ('class_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='core.classgroup')),
                ('department', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='core.department')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='core.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='core.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(choices=[('2000/2001', '2000/2001'), ('2001/2002', '2001/2002'), ('2002/2003', '2002/2003'), ('2003/2004', '2003/2004'), ('2004/2005', '2004/2005'), ('2005/2006', '2005/2006'), ('2006/2007', '2006/2007'), ('2007/2008', '2007/2008'), ('2008/2009', '2008/2009'), ('2009/2010', '2009/2010'), ('2010/2011', '2010/2011'), ('2011/2012', '2011/2012'), ('2012/2013', '2012/2013'), ('2013/2014', '2013/2014'), ('2014/2015', '2014/2015'), ('2015/2016', '2015/2016'), ('2016/2017', '2016/2017'), ('2017/2018', '2017/2018'), ('2018/2019', '2018/2019'), ('2019/2020', '2019/2020'), ('2020/2021', '2020/2021'), ('2021/2022', '2021/2022'), ('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035'), ('2035/2036', '2035/2036'), ('2036/2037', '2036/2037'), ('2037/2038', '2037/2038'), ('2038/2039', '2038/2039'), ('2039/2040', '2039/2040'), ('2040/2041', '2040/2041'), ('2041/2042', '2041/2042'), ('2042/2043', '2042/2043'), ('2043/2044', '2043/2044'), ('2044/2045', '2044/2045'), ('2045/2046', '2045/2046'), ('2046/2047', '2046/2047'), ('2047/2048', '2047/2048'), ('2048/2049', '2048/2049'), ('2049/2050', '2049/2050'), ('2050/2051', '2050/2051'), ('2051/2052', '2051/2052'), ('2052/2053', '2052/2053'), ('2053/2054', '2053/2054'), ('2054/2055', '2054/2055'), ('2055/2056', '2055/2056'), ('2056/2057', '2056/2057'), ('2057/2058', '2057/2058'), ('2058/2059', '2058/2059'), ('2059/2060', '2059/2060'), ('2060/2061', '2060/2061'), ('2061/2062', '2061/2062'), ('2062/2063', '2062/2063'), ('2063/2064', '2063/2064'), ('2064/2065', '2064/2065'), ('2065/2066', '2065/2066'), ('2066/2067', '2066/2067'), ('2067/2068', '2067/2068'), ('2068/2069', '2068/2069'), ('2069/2070', '2069/2070'), ('2070/2071', '2070/2071'), ('2071/2072', '2071/2072'), ('2072/2073', '2072/2073'), ('2073/2074', '2073/2074'), ('2074/2075', '2074/2075'), ('2075/2076', '2075/2076'), ('2076/2077', '2076/2077'), ('2077/2078', '2077/2078'), ('2078/2079', '2078/2079'), ('2079/2080', '2079/2080'), ('2080/2081', '2080/2081'), ('2081/2082', '2081/2082'), ('2082/2083', '2082/2083'), ('2083/2084', '2083/2084'), ('2084/2085', '2084/2085'), ('2085/2086', '2085/2086'), ('2086/2087', '2086/2087'), ('2087/2088', '2087/2088'), ('2088/2089', '2088/2089'), ('2089/2090', '2089/2090'), ('2090/2091', '2090/2091'), ('2091/2092', '2091/2092'), ('2092/2093', '2092/2093'), ('2093/2094', '2093/2094'), ('2094/2095', '2094/2095'), ('2095/2096', '2095/2096'), ('2096/2097', '2096/2097'), ('2097/2098', '2097/2098'), ('2098/2099', '2098/2099'), ('2099/2100', '2099/2100'), ('2100/2101', '2100/2101'), ('2101/2102', '2101/2102'), ('2102/2103', '2102/2103'), ('2103/2104', '2103/2104'), ('2104/2105', '2104/2105'), ('2105/2106', '2105/2106'), ('2106/2107', '2106/2107'), ('2107/2108', '2107/2108'), ('2108/2109', '2108/2109'), ('2109/2110', '2109/2110'), ('2110/2111', '2110/2111'), ('2111/2112', '2111/2112'), ('2112/2113', '2112/2113'), ('2113/2114', '2113/2114'), ('2114/2115', '2114/2115'), ('2115/2116', '2115/2116'), ('2116/2117', '2116/2117'), ('2117/2118', '2117/2118'), ('2118/2119', '2118/2119'), ('2119/2120', '2119/2120'), ('2120/2121', '2120/2121'), ('2121/2122', '2121/2122'), ('2122/2123', '2122/2123'), ('2123/2124', '2123/2124'), ('2124/2125', '2124/2125'), ('2125/2126', '2125/2126'), ('2126/2127', '2126/2127'), ('2127/2128', '2127/2128'), ('2128/2129', '2128/2129'), ('2129/2130', '2129/2130'), ('2130/2131', '2130/2131'), ('2131/2132', '2131/2132'), ('2132/2133', '2132/2133'), ('2133/2134', '2133/2134'), ('2134/2135', '2134/2135'), ('2135/2136', '2135/2136'), ('2136/2137', '2136/2137'), ('2137/2138', '2137/2138'), ('2138/2139', '2138/2139'), ('2139/2140', '2139/2140'), ('2140/2141', '2140/2141'), ('2141/2142', '2141/2142'), ('2142/2143', '2142/2143'), ('2143/2144', '2143/2144'), ('2144/2145', '2144/2145'), ('2145/2146', '2145/2146'), ('2146/2147', '2146/2147'), ('2147/2148', '2147/2148'), ('2148/2149', '2148/2149'), ('2149/2150', '2149/2150')], default='2025/2026', max_length=9)),
                ('term', models.CharField(max_length=20)),
                ('mark', models.DecimalField(decimal_places=2, max_digits=5)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Submitted', 'Submitted'), ('Queried', 'Queried')], default='Pending', max_length=10)),
                ('query_reason', models.TextField(blank=True, null=True)),
                ('circuit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.circuit')),
                ('class_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.classgroup')),
                ('department', models.ManyToManyField(blank=True, related_name='results', to='core.department')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.district')),
                ('teacher', models.ForeignKey(blank=True, limit_choices_to={'role': 'teacher'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.school')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='core.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_classes', models.ManyToManyField(blank=True, related_name='teachers_assigned_classes', to='core.classgroup')),
                ('assigned_subjects', models.ManyToManyField(blank=True, related_name='teachers_assigned_subjects', to='core.subject')),
                ('department', models.ManyToManyField(blank=True, related_name='teachers', to='core.department')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='core.school')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_classes', models.ManyToManyField(related_name='subject_teachers_set', to='core.classgroup')),
                ('managed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'headteacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_subject_teachers', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_teachers_set', to='core.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_teacher_profile_set', to='core.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='ClassTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_teachers_set', to='core.classgroup')),
                ('managed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'headteacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_class_teachers', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_teacher_profile_set', to='core.teacher')),
            ],
        ),
    ]
